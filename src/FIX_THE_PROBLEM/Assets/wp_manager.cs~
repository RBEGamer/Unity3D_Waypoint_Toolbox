using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class wp_manager : MonoBehaviour {




    long id_counter = 0;
    public List<GameObject> all_points = new List<GameObject>();


    public void register_wp(GameObject _go) {
		if(_go == null ||  _go.GetComponent<wp_point_info>() == null){
			Debug.LogError("point cant be registeres - no wp_info component");
			return;
		}
        _go.GetComponent<wp_point_info>().get_reg_data(id_counter++);
        all_points.Add(_go);
    }


    public void unregister_wp_and_destroy(GameObject _go)
    {
		if(_go == null ||  _go.GetComponent<wp_point_info>() == null){
			Debug.LogError("point cant be unregsiter - no wp_info component");
			return;
		}
        _go.GetComponent<wp_point_info>().get_unreg_data();
        all_points.Remove(_go);
#if UNITY_EDITOR 
        DestroyImmediate(_go);
#else
        Destroy(_go);
#endif
    }

	[ContextMenu("REREGISTER ALL WAYPOINTS")]
	public void reregister_all_points(){
		id_counter = 0;
		all_points.Clear();
		foreach (GameObject n in GameObject.FindGameObjectsWithTag("WP")) {
			if(n != null && n.GetComponent<wp_point_info>() != null){
				register_wp(n);
			}
		}
	}

	[ContextMenu("CHECK WP STRUCUTRE")]
	public void check_wp_structure(){
		if(all_points.Count != GameObject.FindGameObjectsWithTag("WP").Length){
			Debug.LogError("run reregister of all waypoints");
			reregister_all_points();
		}
		bool mrre = false;
		for (int i = 0; i < all_points.Count; i++) {
			if(all_points[i] == null || all_points[i].GetComponent<wp_point_info>() == null){
				mrre = true;
				break;
			}
		}
		if(mrre){
			Debug.LogError("run reregister of all waypoints");
			reregister_all_points();
		}
	}
	// Use this for initialization
	void Start () {
		//At start check consesty of the wp structure
		check_wp_structure();





	}
	
	// Update is called once per frame
	void Update () {
		
	}
}



